"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"failed","Thu Jul 31 18:35:02 UTC 2025","Thu Jul 31 18:35:02 UTC 2025","34","","com.example.fakestoreapi.test.products.PostProductsTests","","com.example.fakestoreapi.test.products.PostProductsTests","testPostProductWithInvalidData","Test POST /products endpoint with invalid data [4] com.example.fakestoreapi.model.Product@4cdb7fd9, 400",""
"failed","Thu Jul 31 18:35:02 UTC 2025","Thu Jul 31 18:35:02 UTC 2025","33","","com.example.fakestoreapi.test.products.GetProductsTests","","com.example.fakestoreapi.test.products.GetProductsTests","testGetProductById","Test GET products by ID endpoint [1] 1, 200",""
"failed","Thu Jul 31 18:35:03 UTC 2025","Thu Jul 31 18:35:03 UTC 2025","31","","com.example.fakestoreapi.test.carts.PutCartsTests","","com.example.fakestoreapi.test.carts.PutCartsTests","testPutInvalidCart","Test update /carts/{id} endpoint with invalid data [3] com.example.fakestoreapi.model.Cart@51a6af38, 400",""
"failed","Thu Jul 31 18:35:03 UTC 2025","Thu Jul 31 18:35:03 UTC 2025","31","","com.example.fakestoreapi.test.carts.GetCartsTests","","com.example.fakestoreapi.test.carts.GetCartsTests","testGetCartById","Test GET cart by ID endpoint [3] 3, 200",""
"failed","Thu Jul 31 18:35:04 UTC 2025","Thu Jul 31 18:35:04 UTC 2025","36","","com.example.fakestoreapi.test.users.PostUsersTests","","com.example.fakestoreapi.test.users.PostUsersTests","testPostUserWithValidData","Test POST user with valid data [1] com.example.fakestoreapi.model.User@7ea7fed5, 200",""
"failed","Thu Jul 31 18:35:02 UTC 2025","Thu Jul 31 18:35:02 UTC 2025","57","","com.example.fakestoreapi.test.products.PutProductsTests","","com.example.fakestoreapi.test.products.PutProductsTests","testPutInvalidProduct","Test PUT /products endpoint with invalid data [1] com.example.fakestoreapi.model.Product@5d18a787, 400",""
"failed","Thu Jul 31 18:35:02 UTC 2025","Thu Jul 31 18:35:03 UTC 2025","35","","com.example.fakestoreapi.test.products.GetProductsTests","","com.example.fakestoreapi.test.products.GetProductsTests","testGetProductById","Test GET products by ID endpoint [3] 3, 200",""
"failed","Thu Jul 31 18:35:03 UTC 2025","Thu Jul 31 18:35:03 UTC 2025","37","","com.example.fakestoreapi.test.carts.GetCartsTests","","com.example.fakestoreapi.test.carts.GetCartsTests","testGetCartByInvalidId","testGetCartByInvalidId(int, int) [1] 9999, 404","Test GET /carts/{id} endpoint"
"passed","Thu Jul 31 18:34:46 UTC 2025","Thu Jul 31 18:34:51 UTC 2025","4787","","com.example.fakestoreapi.test.performance.PerformanceTests","","com.example.fakestoreapi.test.performance.PerformanceTests","testRateLimiting","testRateLimiting()","Test rate limiting"
"failed","Thu Jul 31 18:35:01 UTC 2025","Thu Jul 31 18:35:01 UTC 2025","36","","com.example.fakestoreapi.test.products.DeleteProductsTests","","com.example.fakestoreapi.test.products.DeleteProductsTests","testDeleteProductById","Test DELETE product by ID endpoint with various IDs [1] 1, 200",""
"failed","Thu Jul 31 18:35:03 UTC 2025","Thu Jul 31 18:35:03 UTC 2025","34","","com.example.fakestoreapi.test.carts.PostCartsTests","","com.example.fakestoreapi.test.carts.PostCartsTests","testPostCartWithInvalidData","Test POST carts with invalid data [1] com.example.fakestoreapi.model.Cart@52dbd3d, 404",""
"failed","Thu Jul 31 18:35:04 UTC 2025","Thu Jul 31 18:35:04 UTC 2025","28","","com.example.fakestoreapi.test.users.GetUsersTests","","com.example.fakestoreapi.test.users.GetUsersTests","testGetUserByInvalidId","Test GET /users/{id} endpoint with invalid ID [2] -1, 400",""
"failed","Thu Jul 31 18:35:01 UTC 2025","Thu Jul 31 18:35:01 UTC 2025","33","","com.example.fakestoreapi.test.products.DeleteProductsTests","","com.example.fakestoreapi.test.products.DeleteProductsTests","testDeleteProductByInvalidId","Test DELETE product by ID endpoint with various IDs [3] 0, 400",""
"failed","Thu Jul 31 18:35:03 UTC 2025","Thu Jul 31 18:35:04 UTC 2025","31","","com.example.fakestoreapi.test.carts.GetCartsTests","","com.example.fakestoreapi.test.carts.GetCartsTests","testGetCartByInvalidId","testGetCartByInvalidId(int, int) [3] 0, 400","Test GET /carts/{id} endpoint"
"failed","Thu Jul 31 18:35:02 UTC 2025","Thu Jul 31 18:35:02 UTC 2025","38","","com.example.fakestoreapi.test.products.PostProductsTests","","com.example.fakestoreapi.test.products.PostProductsTests","testPostProduct","Test POST /products endpoint with valid data [3] com.example.fakestoreapi.model.Product@32fb4a87, 200",""
"failed","Thu Jul 31 18:35:02 UTC 2025","Thu Jul 31 18:35:02 UTC 2025","49","","com.example.fakestoreapi.test.products.PutProductsTests","","com.example.fakestoreapi.test.products.PutProductsTests","testPutInvalidProduct","Test PUT /products endpoint with invalid data [2] com.example.fakestoreapi.model.Product@4bda93f1, 400",""
"failed","Thu Jul 31 18:35:03 UTC 2025","Thu Jul 31 18:35:03 UTC 2025","29","","com.example.fakestoreapi.test.carts.GetCartsTests","","com.example.fakestoreapi.test.carts.GetCartsTests","testGetCartById","Test GET cart by ID endpoint [2] 2, 200",""
"failed","Thu Jul 31 18:35:03 UTC 2025","Thu Jul 31 18:35:03 UTC 2025","29","","com.example.fakestoreapi.test.carts.GetCartsTests","","com.example.fakestoreapi.test.carts.GetCartsTests","testGetCartByInvalidId","testGetCartByInvalidId(int, int) [2] -1, 400","Test GET /carts/{id} endpoint"
"failed","Thu Jul 31 18:35:03 UTC 2025","Thu Jul 31 18:35:03 UTC 2025","30","","com.example.fakestoreapi.test.carts.PutCartsTests","","com.example.fakestoreapi.test.carts.PutCartsTests","testPutValidCart","Test Update /carts/{id} endpoint with valid data [1] com.example.fakestoreapi.model.Cart@7fda0e30, 200",""
"failed","Thu Jul 31 18:35:03 UTC 2025","Thu Jul 31 18:35:03 UTC 2025","36","","com.example.fakestoreapi.test.carts.PostCartsTests","","com.example.fakestoreapi.test.carts.PostCartsTests","testPostCartWithValidData","Test POST carts with valid data [2] com.example.fakestoreapi.model.Cart@34788780, 200",""
"failed","Thu Jul 31 18:35:02 UTC 2025","Thu Jul 31 18:35:02 UTC 2025","37","","com.example.fakestoreapi.test.products.PostProductsTests","","com.example.fakestoreapi.test.products.PostProductsTests","testPostProduct","Test POST /products endpoint with valid data [2] com.example.fakestoreapi.model.Product@7f39bcb5, 200",""
"failed","Thu Jul 31 18:35:03 UTC 2025","Thu Jul 31 18:35:03 UTC 2025","31","","com.example.fakestoreapi.test.carts.PutCartsTests","","com.example.fakestoreapi.test.carts.PutCartsTests","testPutValidCart","Test Update /carts/{id} endpoint with valid data [2] com.example.fakestoreapi.model.Cart@3ef8de39, 200",""
"failed","Thu Jul 31 18:35:03 UTC 2025","Thu Jul 31 18:35:03 UTC 2025","27","","com.example.fakestoreapi.test.carts.DeleteCartsTests","","com.example.fakestoreapi.test.carts.DeleteCartsTests","testDeleteCartsByInvalidId","Test DELETE carts by ID with various invalid IDs [2] -1, 400",""
"failed","Thu Jul 31 18:35:04 UTC 2025","Thu Jul 31 18:35:04 UTC 2025","41","","com.example.fakestoreapi.test.users.PutUsersTests","","com.example.fakestoreapi.test.users.PutUsersTests","testUpdateValidUser","Test Update /users/{id} endpoint with valid data [2] com.example.fakestoreapi.model.User@6434827e, 200",""
"passed","Thu Jul 31 18:34:51 UTC 2025","Thu Jul 31 18:35:01 UTC 2025","10047","","com.example.fakestoreapi.test.performance.PerformanceTests","","com.example.fakestoreapi.test.performance.PerformanceTests","testConcurrentRequests","testConcurrentRequests()","Test concurrent requests"
"failed","Thu Jul 31 18:35:03 UTC 2025","Thu Jul 31 18:35:03 UTC 2025","26","","com.example.fakestoreapi.test.carts.DeleteCartsTests","","com.example.fakestoreapi.test.carts.DeleteCartsTests","testDeleteCartsByInvalidId","Test DELETE carts by ID with various invalid IDs [3] 0, 400",""
"failed","Thu Jul 31 18:35:01 UTC 2025","Thu Jul 31 18:35:02 UTC 2025","213","","com.example.fakestoreapi.test.products.PostProductsTests","","com.example.fakestoreapi.test.products.PostProductsTests","testPostProductWithInvalidData","Test POST /products endpoint with invalid data [1] com.example.fakestoreapi.model.Product@1609ed55, 400",""
"passed","Thu Jul 31 18:35:02 UTC 2025","Thu Jul 31 18:35:02 UTC 2025","31","","com.example.fakestoreapi.test.products.GetProductsTests","","com.example.fakestoreapi.test.products.GetProductsTests","testGetProductResponseTime","Test GET /products/{id} response time [2] 2, 200",""
"passed","Thu Jul 31 18:35:01 UTC 2025","Thu Jul 31 18:35:01 UTC 2025","38","","com.example.fakestoreapi.test.performance.PerformanceTests","","com.example.fakestoreapi.test.performance.PerformanceTests","testGetUserResponseTime","testGetUserResponseTime(int, int) [3] 3, 200","Test response time for GET /users/{id}"
"failed","Thu Jul 31 18:35:03 UTC 2025","Thu Jul 31 18:35:03 UTC 2025","32","","com.example.fakestoreapi.test.carts.DeleteCartsTests","","com.example.fakestoreapi.test.carts.DeleteCartsTests","testDeleteCartsByValidId","Test DELETE carts by ID with valid IDs [2] 2, 200",""
"failed","Thu Jul 31 18:35:03 UTC 2025","Thu Jul 31 18:35:03 UTC 2025","34","","com.example.fakestoreapi.test.carts.PutCartsTests","","com.example.fakestoreapi.test.carts.PutCartsTests","testPutInvalidCart","Test update /carts/{id} endpoint with invalid data [1] com.example.fakestoreapi.model.Cart@2ff30a75, 404",""
"failed","Thu Jul 31 18:35:03 UTC 2025","Thu Jul 31 18:35:03 UTC 2025","34","","com.example.fakestoreapi.test.carts.PostCartsTests","","com.example.fakestoreapi.test.carts.PostCartsTests","testPostCartWithValidData","Test POST carts with valid data [3] com.example.fakestoreapi.model.Cart@6d89c923, 200",""
"passed","Thu Jul 31 18:35:01 UTC 2025","Thu Jul 31 18:35:01 UTC 2025","34","","com.example.fakestoreapi.test.performance.PerformanceTests","","com.example.fakestoreapi.test.performance.PerformanceTests","testGetUserResponseTime","testGetUserResponseTime(int, int) [2] 2, 200","Test response time for GET /users/{id}"
"failed","Thu Jul 31 18:35:02 UTC 2025","Thu Jul 31 18:35:02 UTC 2025","52","","com.example.fakestoreapi.test.products.GetProductsTests","","com.example.fakestoreapi.test.products.GetProductsTests","testGetProductById","Test GET products by ID endpoint [2] 2, 200",""
"failed","Thu Jul 31 18:35:03 UTC 2025","Thu Jul 31 18:35:03 UTC 2025","33","","com.example.fakestoreapi.test.products.GetProductsTests","","com.example.fakestoreapi.test.products.GetProductsTests","testGetAllProducts","Test GET all products endpoint",""
"broken","Thu Jul 31 18:35:02 UTC 2025","Thu Jul 31 18:35:02 UTC 2025","42","","com.example.fakestoreapi.test.products.PutProductsTests","","com.example.fakestoreapi.test.products.PutProductsTests","testPutValidProduct","Test PUT /products/{id} endpoint with valid data [1] com.example.fakestoreapi.model.Product@27ae6f9e, 200",""
"passed","Thu Jul 31 18:35:01 UTC 2025","Thu Jul 31 18:35:01 UTC 2025","84","","com.example.fakestoreapi.test.performance.PerformanceTests","","com.example.fakestoreapi.test.performance.PerformanceTests","testGetUserResponseTime","testGetUserResponseTime(int, int) [1] 1, 200","Test response time for GET /users/{id}"
"failed","Thu Jul 31 18:35:03 UTC 2025","Thu Jul 31 18:35:03 UTC 2025","37","","com.example.fakestoreapi.test.carts.GetCartsTests","","com.example.fakestoreapi.test.carts.GetCartsTests","testGetCartById","Test GET cart by ID endpoint [1] 1, 200",""
"failed","Thu Jul 31 18:35:03 UTC 2025","Thu Jul 31 18:35:03 UTC 2025","63","","com.example.fakestoreapi.test.carts.PostCartsTests","","com.example.fakestoreapi.test.carts.PostCartsTests","testPostCartWithValidData","Test POST carts with valid data [1] com.example.fakestoreapi.model.Cart@2e03b52f, 200",""
"failed","Thu Jul 31 18:35:04 UTC 2025","Thu Jul 31 18:35:04 UTC 2025","31","","com.example.fakestoreapi.test.users.GetUsersTests","","com.example.fakestoreapi.test.users.GetUsersTests","testGetUserByValidId","Test GET /users/{id} endpoint [3] 3, 200",""
"failed","Thu Jul 31 18:35:02 UTC 2025","Thu Jul 31 18:35:02 UTC 2025","40","","com.example.fakestoreapi.test.products.PostProductsTests","","com.example.fakestoreapi.test.products.PostProductsTests","testPostProductWithInvalidData","Test POST /products endpoint with invalid data [2] com.example.fakestoreapi.model.Product@5fc3dfc1, 400",""
"failed","Thu Jul 31 18:35:04 UTC 2025","Thu Jul 31 18:35:04 UTC 2025","27","","com.example.fakestoreapi.test.users.PutUsersTests","","com.example.fakestoreapi.test.users.PutUsersTests","testUpdateInvalidUser","Test Update /users/{id} endpoint with invalid data [2] com.example.fakestoreapi.model.User@250d3c1b, 400",""
"failed","Thu Jul 31 18:35:02 UTC 2025","Thu Jul 31 18:35:02 UTC 2025","38","","com.example.fakestoreapi.test.products.PutProductsTests","","com.example.fakestoreapi.test.products.PutProductsTests","testPutInvalidProduct","Test PUT /products endpoint with invalid data [4] com.example.fakestoreapi.model.Product@59a49dbc, 400",""
"failed","Thu Jul 31 18:35:04 UTC 2025","Thu Jul 31 18:35:04 UTC 2025","36","","com.example.fakestoreapi.test.users.PostUsersTests","","com.example.fakestoreapi.test.users.PostUsersTests","testPostUserWithValidData","Test POST user with valid data [2] com.example.fakestoreapi.model.User@4c66b3d9, 200",""
"failed","Thu Jul 31 18:35:03 UTC 2025","Thu Jul 31 18:35:03 UTC 2025","36","","com.example.fakestoreapi.test.carts.PutCartsTests","","com.example.fakestoreapi.test.carts.PutCartsTests","testPutInvalidCart","Test update /carts/{id} endpoint with invalid data [2] com.example.fakestoreapi.model.Cart@68f9a4f4, 400",""
"failed","Thu Jul 31 18:35:01 UTC 2025","Thu Jul 31 18:35:01 UTC 2025","33","","com.example.fakestoreapi.test.products.DeleteProductsTests","","com.example.fakestoreapi.test.products.DeleteProductsTests","testDeleteProductById","Test DELETE product by ID endpoint with various IDs [2] 2, 200",""
"failed","Thu Jul 31 18:35:04 UTC 2025","Thu Jul 31 18:35:04 UTC 2025","28","","com.example.fakestoreapi.test.users.DeleteUsersTests","","com.example.fakestoreapi.test.users.DeleteUsersTests","testDeleteUser","testDeleteUser(int, int) [3] 3, 200","Test DELETE /users/{id} endpoint with valid IDs"
"failed","Thu Jul 31 18:35:04 UTC 2025","Thu Jul 31 18:35:04 UTC 2025","29","","com.example.fakestoreapi.test.users.PostUsersTests","","com.example.fakestoreapi.test.users.PostUsersTests","testPostUserWithInvalidData","Test POST user with valid data [2] com.example.fakestoreapi.model.User@4916619e, 400",""
"failed","Thu Jul 31 18:35:01 UTC 2025","Thu Jul 31 18:35:01 UTC 2025","37","","com.example.fakestoreapi.test.products.DeleteProductsTests","","com.example.fakestoreapi.test.products.DeleteProductsTests","testDeleteProductByInvalidId","Test DELETE product by ID endpoint with various IDs [2] -1, 400",""
"failed","Thu Jul 31 18:35:03 UTC 2025","Thu Jul 31 18:35:03 UTC 2025","41","","com.example.fakestoreapi.test.carts.GetCartsTests","","com.example.fakestoreapi.test.carts.GetCartsTests","getAllCarts","Test GET /carts endpoint",""
"failed","Thu Jul 31 18:35:01 UTC 2025","Thu Jul 31 18:35:01 UTC 2025","118","","com.example.fakestoreapi.test.products.DeleteProductsTests","","com.example.fakestoreapi.test.products.DeleteProductsTests","testDeleteProductByInvalidId","Test DELETE product by ID endpoint with various IDs [1] 9999, 404",""
"failed","Thu Jul 31 18:35:03 UTC 2025","Thu Jul 31 18:35:03 UTC 2025","42","","com.example.fakestoreapi.test.carts.DeleteCartsTests","","com.example.fakestoreapi.test.carts.DeleteCartsTests","testDeleteCartsByValidId","Test DELETE carts by ID with valid IDs [1] 1, 200",""
"failed","Thu Jul 31 18:35:03 UTC 2025","Thu Jul 31 18:35:03 UTC 2025","31","","com.example.fakestoreapi.test.carts.DeleteCartsTests","","com.example.fakestoreapi.test.carts.DeleteCartsTests","testDeleteCartsByInvalidId","Test DELETE carts by ID with various invalid IDs [1] 9999, 404",""
"failed","Thu Jul 31 18:35:04 UTC 2025","Thu Jul 31 18:35:04 UTC 2025","32","","com.example.fakestoreapi.test.users.PostUsersTests","","com.example.fakestoreapi.test.users.PostUsersTests","testPostUserWithInvalidData","Test POST user with valid data [1] com.example.fakestoreapi.model.User@4f36fc2d, 400",""
"passed","Thu Jul 31 18:35:02 UTC 2025","Thu Jul 31 18:35:02 UTC 2025","50","","com.example.fakestoreapi.test.products.GetProductsTests","","com.example.fakestoreapi.test.products.GetProductsTests","testGetProductResponseTime","Test GET /products/{id} response time [1] 1, 200",""
"failed","Thu Jul 31 18:35:04 UTC 2025","Thu Jul 31 18:35:04 UTC 2025","26","","com.example.fakestoreapi.test.users.DeleteUsersTests","","com.example.fakestoreapi.test.users.DeleteUsersTests","testDeleteUser","testDeleteUser(int, int) [2] 2, 200","Test DELETE /users/{id} endpoint with valid IDs"
"failed","Thu Jul 31 18:35:02 UTC 2025","Thu Jul 31 18:35:02 UTC 2025","36","","com.example.fakestoreapi.test.products.PostProductsTests","","com.example.fakestoreapi.test.products.PostProductsTests","testPostProduct","Test POST /products endpoint with valid data [1] com.example.fakestoreapi.model.Product@25af2afe, 200",""
"failed","Thu Jul 31 18:35:04 UTC 2025","Thu Jul 31 18:35:04 UTC 2025","29","","com.example.fakestoreapi.test.users.GetUsersTests","","com.example.fakestoreapi.test.users.GetUsersTests","testGetUserByInvalidId","Test GET /users/{id} endpoint with invalid ID [1] 9999, 404",""
"failed","Thu Jul 31 18:35:04 UTC 2025","Thu Jul 31 18:35:04 UTC 2025","29","","com.example.fakestoreapi.test.users.GetUsersTests","","com.example.fakestoreapi.test.users.GetUsersTests","testGetUserByValidId","Test GET /users/{id} endpoint [1] 1, 200",""
"broken","Thu Jul 31 18:35:02 UTC 2025","Thu Jul 31 18:35:02 UTC 2025","35","","com.example.fakestoreapi.test.products.PutProductsTests","","com.example.fakestoreapi.test.products.PutProductsTests","testPutValidProduct","Test PUT /products/{id} endpoint with valid data [2] com.example.fakestoreapi.model.Product@3c88db1, 200",""
"failed","Thu Jul 31 18:35:03 UTC 2025","Thu Jul 31 18:35:03 UTC 2025","39","","com.example.fakestoreapi.test.carts.DeleteCartsTests","","com.example.fakestoreapi.test.carts.DeleteCartsTests","testDeleteCartsByValidId","Test DELETE carts by ID with valid IDs [3] 3, 200",""
"failed","Thu Jul 31 18:35:02 UTC 2025","Thu Jul 31 18:35:02 UTC 2025","41","","com.example.fakestoreapi.test.products.PutProductsTests","","com.example.fakestoreapi.test.products.PutProductsTests","testPutInvalidProduct","Test PUT /products endpoint with invalid data [3] com.example.fakestoreapi.model.Product@640a80aa, 400",""
"failed","Thu Jul 31 18:35:04 UTC 2025","Thu Jul 31 18:35:04 UTC 2025","52","","com.example.fakestoreapi.test.users.PutUsersTests","","com.example.fakestoreapi.test.users.PutUsersTests","testUpdateValidUser","Test Update /users/{id} endpoint with valid data [1] com.example.fakestoreapi.model.User@207b0d48, 200",""
"failed","Thu Jul 31 18:35:01 UTC 2025","Thu Jul 31 18:35:01 UTC 2025","42","","com.example.fakestoreapi.test.products.DeleteProductsTests","","com.example.fakestoreapi.test.products.DeleteProductsTests","testDeleteProductById","Test DELETE product by ID endpoint with various IDs [3] 3, 200",""
"failed","Thu Jul 31 18:35:04 UTC 2025","Thu Jul 31 18:35:04 UTC 2025","28","","com.example.fakestoreapi.test.users.GetUsersTests","","com.example.fakestoreapi.test.users.GetUsersTests","testGetUserByValidId","Test GET /users/{id} endpoint [2] 2, 200",""
"failed","Thu Jul 31 18:35:03 UTC 2025","Thu Jul 31 18:35:03 UTC 2025","38","","com.example.fakestoreapi.test.carts.PostCartsTests","","com.example.fakestoreapi.test.carts.PostCartsTests","testPostCartWithInvalidData","Test POST carts with invalid data [2] com.example.fakestoreapi.model.Cart@2a8e93db, 400",""
"failed","Thu Jul 31 18:35:02 UTC 2025","Thu Jul 31 18:35:02 UTC 2025","34","","com.example.fakestoreapi.test.products.PostProductsTests","","com.example.fakestoreapi.test.products.PostProductsTests","testPostProductWithInvalidData","Test POST /products endpoint with invalid data [3] com.example.fakestoreapi.model.Product@565fa7d2, 400",""
"failed","Thu Jul 31 18:35:04 UTC 2025","Thu Jul 31 18:35:04 UTC 2025","36","","com.example.fakestoreapi.test.users.DeleteUsersTests","","com.example.fakestoreapi.test.users.DeleteUsersTests","testDeleteUser","testDeleteUser(int, int) [1] 1, 200","Test DELETE /users/{id} endpoint with valid IDs"
"failed","Thu Jul 31 18:35:04 UTC 2025","Thu Jul 31 18:35:04 UTC 2025","36","","com.example.fakestoreapi.test.users.GetUsersTests","","com.example.fakestoreapi.test.users.GetUsersTests","testGetUserByInvalidId","Test GET /users/{id} endpoint with invalid ID [3] 0, 400",""
"failed","Thu Jul 31 18:35:04 UTC 2025","Thu Jul 31 18:35:04 UTC 2025","29","","com.example.fakestoreapi.test.users.PutUsersTests","","com.example.fakestoreapi.test.users.PutUsersTests","testUpdateInvalidUser","Test Update /users/{id} endpoint with invalid data [1] com.example.fakestoreapi.model.User@2220780d, 400",""
"broken","Thu Jul 31 18:35:02 UTC 2025","Thu Jul 31 18:35:02 UTC 2025","34","","com.example.fakestoreapi.test.products.PutProductsTests","","com.example.fakestoreapi.test.products.PutProductsTests","testPutValidProduct","Test PUT /products/{id} endpoint with valid data [3] com.example.fakestoreapi.model.Product@64aab3fd, 200",""
"failed","Thu Jul 31 18:35:04 UTC 2025","Thu Jul 31 18:35:04 UTC 2025","28","","com.example.fakestoreapi.test.users.GetUsersTests","","com.example.fakestoreapi.test.users.GetUsersTests","testGetAllUsers","Test GET /users endpoint",""
"passed","Thu Jul 31 18:35:02 UTC 2025","Thu Jul 31 18:35:02 UTC 2025","37","","com.example.fakestoreapi.test.products.GetProductsTests","","com.example.fakestoreapi.test.products.GetProductsTests","testGetProductResponseTime","Test GET /products/{id} response time [3] 3, 200",""
"failed","Thu Jul 31 18:35:03 UTC 2025","Thu Jul 31 18:35:03 UTC 2025","34","","com.example.fakestoreapi.test.carts.PutCartsTests","","com.example.fakestoreapi.test.carts.PutCartsTests","testPutValidCart","Test Update /carts/{id} endpoint with valid data [3] com.example.fakestoreapi.model.Cart@66c18b9b, 200",""
"failed","Thu Jul 31 18:35:03 UTC 2025","Thu Jul 31 18:35:03 UTC 2025","29","","com.example.fakestoreapi.test.carts.PostCartsTests","","com.example.fakestoreapi.test.carts.PostCartsTests","testPostCartWithInvalidData","Test POST carts with invalid data [3] com.example.fakestoreapi.model.Cart@cf9223f, 400",""
